<#@ include file="../../SchoolManager.Models/Common.ttinclude"#>
<#

const string inputFile = @"../../SchoolManager.Models/Db.edmx";
var textTransform = DynamicTextTransformation.Create(this);
var code = new CodeGenerationTools(this);
var ef = new MetadataTools(this); 
var typeMapper = new TypeMapper(code, ef, textTransform.Errors);
var	fileManager = EntityFrameworkTemplateFileManager.Create(this);
var itemCollection = new EdmMetadataLoader(textTransform.Host, textTransform.Errors).CreateEdmItemCollection(inputFile);
var codeStringGenerator = new CodeStringGenerator(code, typeMapper, ef);

if (!typeMapper.VerifyCaseInsensitiveTypeUniqueness(typeMapper.GetAllGlobalItems(itemCollection), inputFile))
{
    return string.Empty;
}

WriteHeader(codeStringGenerator, fileManager);


foreach (var entity in typeMapper.GetItemsToGenerate<EntityType>(itemCollection))
{
    fileManager.StartNewFile("I"+entity.Name + "Repository.cs");
#>
using SchoolManager.Models;
namespace SchoolManager.IDAL
{
    public partial interface I<#=entity.Name.Replace("tbl_","") #>Repository:IBaseRepository<<#=entity.Name #>>
    {
		
    }
<#
    EndNamespace(code);
	
}

fileManager.Process();

#>