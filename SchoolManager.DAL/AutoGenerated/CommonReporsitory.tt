<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="../../SchoolManager.Models/Common.ttinclude"#>


<#@ 
 output extension=".cs"#><#

const string inputFile = @"../../SchoolManager.Models/Db.edmx";
var textTransform = DynamicTextTransformation.Create(this);
var code = new CodeGenerationTools(this);
var ef = new MetadataTools(this); 
var typeMapper = new TypeMapper(code, ef, textTransform.Errors);
var	fileManager = EntityFrameworkTemplateFileManager.Create(this);
var itemCollection = new EdmMetadataLoader(textTransform.Host, textTransform.Errors).CreateEdmItemCollection(inputFile);
var codeStringGenerator = new CodeStringGenerator(code, typeMapper, ef);

if (!typeMapper.VerifyCaseInsensitiveTypeUniqueness(typeMapper.GetAllGlobalItems(itemCollection), inputFile))
{
    return string.Empty;
}

WriteHeader(codeStringGenerator, fileManager);

foreach (var entity in typeMapper.GetItemsToGenerate<EntityType>(itemCollection))
{
    fileManager.StartNewFile(entity.Name + "Repository.cs");


#>
using SchoolManager.Models;
using System;

namespace SchoolManager.DAL
{
	public partial class <#=entity.Name.Replace("tbl_","") #>Repository:BaseRepository<<#=entity.Name #>>,IDisposable
    {
        public <#=entity.Name.Replace("tbl_","") #>Repository(DbContainer db):base(db)
        {
			
        }
    }

<#
    EndNamespace(code);
}

fileManager.Process();

#>

