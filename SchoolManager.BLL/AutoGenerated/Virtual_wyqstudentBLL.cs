//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using SchoolManager.Models;
using SchoolManager.Common;
using Microsoft.Practices.Unity;
using System.Transactions;
using SchoolManager.DAL;
using SchoolManager.BLL;
using Unity.Attributes;

namespace SchoolManager.BLL
{
	public class Virtual_wyqstudentBLL
	{

        public wyqstudentRepository m_Rep =new wyqstudentRepository(new DbContainer());

		public virtual List<wyqstudentModel> GetList( string queryStr)
        {

            IQueryable<wyqstudent> queryData = null;
            if (!string.IsNullOrWhiteSpace(queryStr))
            {
                queryData = m_Rep.GetList(
								a=>(a.Sno!=null && a.Sno.Contains(queryStr))
								|| (a.Sname!=null && a.Sname.Contains(queryStr))
								|| (a.Ssex!=null && a.Ssex.Contains(queryStr))
								|| (a.State!=null && a.State.Contains(queryStr))
								|| (a.Intime!=null && a.Intime.Contains(queryStr))
								|| (a.SSymbol!=null && a.SSymbol.Contains(queryStr))
								|| (a.Classno!=null && a.Classno.Contains(queryStr))
								|| (a.Gradeno!=null && a.Gradeno.Contains(queryStr))
								|| (a.Province!=null && a.Province.Contains(queryStr))
								|| (a.SAddress!=null && a.SAddress.Contains(queryStr))
								|| (a.STel!=null && a.STel.Contains(queryStr))
								);
            }
            else
            {
                queryData = m_Rep.GetList();
            }
            return CreateModelList(ref queryData);
        }

        public virtual List<wyqstudentModel> CreateModelList(ref IQueryable<wyqstudent> queryData)
        {

            List<wyqstudentModel> modelList = (from r in queryData
                                              select new wyqstudentModel
                                              {
													Sno = r.Sno,
													Sname = r.Sname,
													Ssex = r.Ssex,
													State = r.State,
													Intime = r.Intime,
													SSymbol = r.SSymbol,
													Classno = r.Classno,
													Gradeno = r.Gradeno,
													Province = r.Province,
													SAddress = r.SAddress,
													STel = r.STel,
          
                                              }).ToList();

            return modelList;
        }

        public virtual bool Create(wyqstudentModel model)
        {
            try
            {
                wyqstudent entity = m_Rep.GetById(model.Sno);
                if (entity != null)
                {
                    return false;
                }
                entity = new wyqstudent();
               				entity.Sno = model.Sno;
				entity.Sname = model.Sname;
				entity.Ssex = model.Ssex;
				entity.State = model.State;
				entity.Intime = model.Intime;
				entity.SSymbol = model.SSymbol;
				entity.Classno = model.Classno;
				entity.Gradeno = model.Gradeno;
				entity.Province = model.Province;
				entity.SAddress = model.SAddress;
				entity.STel = model.STel;
  

                if (m_Rep.Create(entity))
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {

                return false;
            }
        }



         public virtual bool Delete( string id)
        {
            try
            {
                if (m_Rep.Delete(id) == 1)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {

                return false;
            }
        }

        public virtual bool Delete( string[] deleteCollection)
        {
            try
            {
                if (deleteCollection != null)
                {
                    using (TransactionScope transactionScope = new TransactionScope())
                    {
                        if (m_Rep.Delete(deleteCollection) == deleteCollection.Length)
                        {
                            transactionScope.Complete();
                            return true;
                        }
                        else
                        {
                            Transaction.Current.Rollback();
                            return false;
                        }
                    }
                }
                return false;
            }
            catch (Exception ex)
            {

                return false;
            }
        }

		
       

        public virtual bool Edit( wyqstudentModel model)
        {
            try
            {
                wyqstudent entity = m_Rep.GetById(model.Sno);
                if (entity == null)
                {
                    return false;
                }
                              				entity.Sno = model.Sno;
				entity.Sname = model.Sname;
				entity.Ssex = model.Ssex;
				entity.State = model.State;
				entity.Intime = model.Intime;
				entity.SSymbol = model.SSymbol;
				entity.Classno = model.Classno;
				entity.Gradeno = model.Gradeno;
				entity.Province = model.Province;
				entity.SAddress = model.SAddress;
				entity.STel = model.STel;
 


                if (m_Rep.Edit(entity))
                {
                    return true;
                }
                else
                {
                    return false;
                }

            }
            catch (Exception ex)
            {                

                return false;
            }
        }

      

        public virtual wyqstudentModel GetById(string id)
        {
            if (IsExists(id))
            {
                wyqstudent entity = m_Rep.GetById(id);
                wyqstudentModel model = new wyqstudentModel();
                              				model.Sno = entity.Sno;
				model.Sname = entity.Sname;
				model.Ssex = entity.Ssex;
				model.State = entity.State;
				model.Intime = entity.Intime;
				model.SSymbol = entity.SSymbol;
				model.Classno = entity.Classno;
				model.Gradeno = entity.Gradeno;
				model.Province = entity.Province;
				model.SAddress = entity.SAddress;
				model.STel = entity.STel;
 
                return model;
            }
            else
            {
                return null;
            }
        }

        public virtual bool IsExists(string id)
        {
            return m_Rep.IsExist(id);
        }
		  public void Dispose()
        { 
            
        }

	}
}
