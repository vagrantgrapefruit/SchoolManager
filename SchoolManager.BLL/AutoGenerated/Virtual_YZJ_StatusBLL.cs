//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using SchoolManager.Models;
using SchoolManager.Common;
using Microsoft.Practices.Unity;
using System.Transactions;
using SchoolManager.DAL;
using SchoolManager.BLL;
using Unity.Attributes;

namespace SchoolManager.BLL
{
	public class Virtual_YZJ_StatusBLL
	{

        public YZJ_StatusRepository m_Rep =new YZJ_StatusRepository(new DbContainer());

		public virtual List<YZJ_StatusModel> GetList( string queryStr)
        {

            IQueryable<YZJ_Status> queryData = null;
            if (!string.IsNullOrWhiteSpace(queryStr))
            {
                queryData = m_Rep.GetList(
								a=>(a.id!=null && a.id.Contains(queryStr))
								
								|| (a.StdRollId!=null && a.StdRollId.Contains(queryStr))
								|| (a.StdName!=null && a.StdName.Contains(queryStr))
								|| (a.StdSex!=null && a.StdSex.Contains(queryStr))
								|| (a.native!=null && a.native.Contains(queryStr))
								|| (a.nation!=null && a.nation.Contains(queryStr))
								|| (a.Entrance_Year!=null && a.Entrance_Year.Contains(queryStr))
								|| (a.Household_Registration_Category!=null && a.Household_Registration_Category.Contains(queryStr))
								|| (a.HouseholdAddress!=null && a.HouseholdAddress.Contains(queryStr))
								|| (a.CurrentAddress!=null && a.CurrentAddress.Contains(queryStr))
								
								|| (a.PhoneNumber!=null && a.PhoneNumber.Contains(queryStr))
								|| (a.UrgentPhoneNumber!=null && a.UrgentPhoneNumber.Contains(queryStr))
								|| (a.PaperType!=null && a.PaperType.Contains(queryStr))
								|| (a.PaperNumber!=null && a.PaperNumber.Contains(queryStr))
								|| (a.UsedName!=null && a.UsedName.Contains(queryStr))
								|| (a.email!=null && a.email.Contains(queryStr))
								|| (a.PostCode!=null && a.PostCode.Contains(queryStr))
								
								
								|| (a.GuardianNo1!=null && a.GuardianNo1.Contains(queryStr))
								|| (a.G1PhoneNumber!=null && a.G1PhoneNumber.Contains(queryStr))
								|| (a.G1Relationship!=null && a.G1Relationship.Contains(queryStr))
								|| (a.GuardianNo2!=null && a.GuardianNo2.Contains(queryStr))
								|| (a.G2PhoneNumber!=null && a.G2PhoneNumber.Contains(queryStr))
								|| (a.G2Relationship!=null && a.G2Relationship.Contains(queryStr))
								|| (a.AlmaMater!=null && a.AlmaMater.Contains(queryStr))
								|| (a.StdCategory!=null && a.StdCategory.Contains(queryStr))
								|| (a.StatusState!=null && a.StatusState.Contains(queryStr))
								);
            }
            else
            {
                queryData = m_Rep.GetList();
            }
            return CreateModelList(ref queryData);
        }

        public virtual List<YZJ_StatusModel> CreateModelList(ref IQueryable<YZJ_Status> queryData)
        {

            List<YZJ_StatusModel> modelList = (from r in queryData
                                              select new YZJ_StatusModel
                                              {
													id = r.id,
													available = r.available,
													StdRollId = r.StdRollId,
													StdName = r.StdName,
													StdSex = r.StdSex,
													native = r.native,
													nation = r.nation,
													Entrance_Year = r.Entrance_Year,
													Household_Registration_Category = r.Household_Registration_Category,
													HouseholdAddress = r.HouseholdAddress,
													CurrentAddress = r.CurrentAddress,
													Photo = r.Photo,
													PhoneNumber = r.PhoneNumber,
													UrgentPhoneNumber = r.UrgentPhoneNumber,
													PaperType = r.PaperType,
													PaperNumber = r.PaperNumber,
													UsedName = r.UsedName,
													email = r.email,
													PostCode = r.PostCode,
													IsLeagueeMember = r.IsLeagueeMember,
													IsYoungPineer = r.IsYoungPineer,
													GuardianNo1 = r.GuardianNo1,
													G1PhoneNumber = r.G1PhoneNumber,
													G1Relationship = r.G1Relationship,
													GuardianNo2 = r.GuardianNo2,
													G2PhoneNumber = r.G2PhoneNumber,
													G2Relationship = r.G2Relationship,
													AlmaMater = r.AlmaMater,
													StdCategory = r.StdCategory,
													StatusState = r.StatusState,
          
                                              }).ToList();

            return modelList;
        }

        public virtual bool Create(YZJ_StatusModel model)
        {
            try
            {
                YZJ_Status entity = m_Rep.GetById(model.id);
                if (entity != null)
                {
                    return false;
                }
                entity = new YZJ_Status();
               				entity.id = model.id;
				entity.available = model.available;
				entity.StdRollId = model.StdRollId;
				entity.StdName = model.StdName;
				entity.StdSex = model.StdSex;
				entity.native = model.native;
				entity.nation = model.nation;
				entity.Entrance_Year = model.Entrance_Year;
				entity.Household_Registration_Category = model.Household_Registration_Category;
				entity.HouseholdAddress = model.HouseholdAddress;
				entity.CurrentAddress = model.CurrentAddress;
				entity.Photo = model.Photo;
				entity.PhoneNumber = model.PhoneNumber;
				entity.UrgentPhoneNumber = model.UrgentPhoneNumber;
				entity.PaperType = model.PaperType;
				entity.PaperNumber = model.PaperNumber;
				entity.UsedName = model.UsedName;
				entity.email = model.email;
				entity.PostCode = model.PostCode;
				entity.IsLeagueeMember = model.IsLeagueeMember;
				entity.IsYoungPineer = model.IsYoungPineer;
				entity.GuardianNo1 = model.GuardianNo1;
				entity.G1PhoneNumber = model.G1PhoneNumber;
				entity.G1Relationship = model.G1Relationship;
				entity.GuardianNo2 = model.GuardianNo2;
				entity.G2PhoneNumber = model.G2PhoneNumber;
				entity.G2Relationship = model.G2Relationship;
				entity.AlmaMater = model.AlmaMater;
				entity.StdCategory = model.StdCategory;
				entity.StatusState = model.StatusState;
  

                if (m_Rep.Create(entity))
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {

                return false;
            }
        }



         public virtual bool Delete( string id)
        {
            try
            {
                if (m_Rep.Delete(id) == 1)
                {
                    return true;
                }
                else
                {
                    return false;
                }
            }
            catch (Exception ex)
            {

                return false;
            }
        }

        public virtual bool Delete( string[] deleteCollection)
        {
            try
            {
                if (deleteCollection != null)
                {
                    using (TransactionScope transactionScope = new TransactionScope())
                    {
                        if (m_Rep.Delete(deleteCollection) == deleteCollection.Length)
                        {
                            transactionScope.Complete();
                            return true;
                        }
                        else
                        {
                            Transaction.Current.Rollback();
                            return false;
                        }
                    }
                }
                return false;
            }
            catch (Exception ex)
            {

                return false;
            }
        }

		
       

        public virtual bool Edit( YZJ_StatusModel model)
        {
            try
            {
                YZJ_Status entity = m_Rep.GetById(model.id);
                if (entity == null)
                {
                    return false;
                }
                              				entity.id = model.id;
				entity.available = model.available;
				entity.StdRollId = model.StdRollId;
				entity.StdName = model.StdName;
				entity.StdSex = model.StdSex;
				entity.native = model.native;
				entity.nation = model.nation;
				entity.Entrance_Year = model.Entrance_Year;
				entity.Household_Registration_Category = model.Household_Registration_Category;
				entity.HouseholdAddress = model.HouseholdAddress;
				entity.CurrentAddress = model.CurrentAddress;
				entity.Photo = model.Photo;
				entity.PhoneNumber = model.PhoneNumber;
				entity.UrgentPhoneNumber = model.UrgentPhoneNumber;
				entity.PaperType = model.PaperType;
				entity.PaperNumber = model.PaperNumber;
				entity.UsedName = model.UsedName;
				entity.email = model.email;
				entity.PostCode = model.PostCode;
				entity.IsLeagueeMember = model.IsLeagueeMember;
				entity.IsYoungPineer = model.IsYoungPineer;
				entity.GuardianNo1 = model.GuardianNo1;
				entity.G1PhoneNumber = model.G1PhoneNumber;
				entity.G1Relationship = model.G1Relationship;
				entity.GuardianNo2 = model.GuardianNo2;
				entity.G2PhoneNumber = model.G2PhoneNumber;
				entity.G2Relationship = model.G2Relationship;
				entity.AlmaMater = model.AlmaMater;
				entity.StdCategory = model.StdCategory;
				entity.StatusState = model.StatusState;
 


                if (m_Rep.Edit(entity))
                {
                    return true;
                }
                else
                {
                    return false;
                }

            }
            catch (Exception ex)
            {                

                return false;
            }
        }

      

        public virtual YZJ_StatusModel GetById(string id)
        {
            if (IsExists(id))
            {
                YZJ_Status entity = m_Rep.GetById(id);
                YZJ_StatusModel model = new YZJ_StatusModel();
                              				model.id = entity.id;
				model.available = entity.available;
				model.StdRollId = entity.StdRollId;
				model.StdName = entity.StdName;
				model.StdSex = entity.StdSex;
				model.native = entity.native;
				model.nation = entity.nation;
				model.Entrance_Year = entity.Entrance_Year;
				model.Household_Registration_Category = entity.Household_Registration_Category;
				model.HouseholdAddress = entity.HouseholdAddress;
				model.CurrentAddress = entity.CurrentAddress;
				model.Photo = entity.Photo;
				model.PhoneNumber = entity.PhoneNumber;
				model.UrgentPhoneNumber = entity.UrgentPhoneNumber;
				model.PaperType = entity.PaperType;
				model.PaperNumber = entity.PaperNumber;
				model.UsedName = entity.UsedName;
				model.email = entity.email;
				model.PostCode = entity.PostCode;
				model.IsLeagueeMember = entity.IsLeagueeMember;
				model.IsYoungPineer = entity.IsYoungPineer;
				model.GuardianNo1 = entity.GuardianNo1;
				model.G1PhoneNumber = entity.G1PhoneNumber;
				model.G1Relationship = entity.G1Relationship;
				model.GuardianNo2 = entity.GuardianNo2;
				model.G2PhoneNumber = entity.G2PhoneNumber;
				model.G2Relationship = entity.G2Relationship;
				model.AlmaMater = entity.AlmaMater;
				model.StdCategory = entity.StdCategory;
				model.StatusState = entity.StatusState;
 
                return model;
            }
            else
            {
                return null;
            }
        }

        public virtual bool IsExists(string id)
        {
            return m_Rep.IsExist(id);
        }
		  public void Dispose()
        { 
            
        }

	}
}
